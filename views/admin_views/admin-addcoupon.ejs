<!DOCTYPE HTML>
<html lang="en">


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-1.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:31 GMT -->
<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminAssets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/adminAssets/css/main.css" rel="stylesheet" type="text/css" />
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="/admin/admin-dash">
                <a href="/"><img src="/WhatsApp Image 2023-11-02 at 6.19.15 PM (1).jpeg" alt="logo"></a>
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
  
                <li class="menu-item">
                    <a class="menu-link" href="/admin/admin-dash"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
  
                <li class="menu-item">
                    <a class="menu-link" href="/admin/product-list"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
  
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category-list"> <i class="icon material-icons md-category"></i>
                        <span class="text">Category</span> </a>
                </li>
  
                <li class="menu-item">
                    <a class="menu-link" href="/admin/user-manage"> <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                </li>
  
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/order-list"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                </li>
                
                <li class="menu-item">
                    <a class="menu-link" href="/admin/sales-report"> <i class="icon material-icons md-assessment"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/coupon-list"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupons</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin//offer-list"> <i class="icon material-icons md-request_quote"></i>
                        <span class="text">Offers</span>
                    </a>
                </li>
                <!-- <li class="menu-item">
                    <a class="menu-link" href="page-form-product-1.html"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                </li> -->
                <!-- <li class="menu-item">
                    <a class="menu-link" href="page-transactions-1.html"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Transactions</span>
                    </a>
                </li> -->
                
                <!-- <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html"> <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li> -->
                
                <!-- <li class="menu-item">
                    <a class="menu-link" disabled href="#"> <i class="icon material-icons md-pie_chart"></i>
                        <span class="text">Statistics</span>
                    </a>
                </li> -->
            </ul>
            <hr>
            <ul class="menu-aside">
                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-settings"></i>
                        <span class="text">Settings</span>
                    </a>
                    <div class="submenu">
                        <a href="page-settings-1.html">Setting sample 1</a>
                        <a href="page-settings-2.html">Setting sample 2</a>
                    </div>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="page-blank.html"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text"> Starter page </span>
                    </a>
                </li> -->
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                    </li>

                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/adminAssets/imgs/people/profilepicture.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item text-danger" href="/admin/admin-logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h3 class="content-title">Add Coupon</h3>
                        <!-- <div>
                            <button class="btn btn-light rounded font-sm mr-5 text-body hover-up">Save to draft</button>
                            <button class="btn btn-md rounded font-sm hover-up">Publich</button>
                        </div> -->
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <!-- <div class="card-header">
                            <h4>Basic</h4>
                        </div> -->
                        <div class="card-body">
                            <form id="coupon-form">
                                <div class="mb-4">
                                    <label for="couponCode" class="form-label">Coupon Code</label>
                                    <input type="text" placeholder="Type here" class="form-control" name="couponCode" id="couponCode">
                                    <div id="form-errors" class="text-danger"></div>
                                    <!-- Add an error container for couponCode if needed -->
                                    <!--<div id="couponCode-error" class="text-danger"></div>-->
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Coupon description</label>
                                    <textarea placeholder="Type here" class="form-control" rows="3" name="description" id="description"></textarea>
                                    <div id="form-errors" class="text-danger"></div>
                                    <!-- Add an error container for description if needed -->
                                    <!--<div id="description-error" class="text-danger"></div>-->
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Discount Amount</label>
                                            <div class="row gx-2">
                                                <input placeholder="₹" type="number" class="form-control" name="discountAmount" id="discountAmount">
                                                <div id="form-errors" class="text-danger"></div>
                                                <!-- Add an error container for discountAmount if needed -->
                                                <!--<div id="discountAmount-error" class="text-danger"></div>-->
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Minimum purchase</label>
                                            <input placeholder="₹" type="number" class="form-control" name="minimumPurchase" id="minimumPurchase">
                                            <div id="form-errors" class="text-danger"></div>
                                            <!-- Add an error container for minimumPurchase if needed -->
                                            <!--<div id="minimumPurchase-error" class="text-danger"></div>-->
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="form-label">Status</label>
                                        <select class="form-select" name="status" id="status">
                                            <option disabled selected>Select status</option>
                                            <option> Block </option>
                                            <option> Unblock </option>
                                        </select>
                                        <div id="form-errors" class="text-danger"></div>
                                        <!-- Add an error container for status if needed -->
                                        <!--<div id="status-error" class="text-danger"></div>-->
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Expiry Date</label>
                                    <input type="date" placeholder="%" class="form-control" name="expiryDate" id="expiryDate">
                                    <div id="form-errors" class="text-danger"></div>
                                    <!-- Add an error container for expiryDate if needed -->
                                    <!--<div id="expiryDate-error" class="text-danger"></div>-->
                                </div>
                                <div>
                                    <button class="btn btn-md" type="submit">Submit</button>
                                </div>
                            </form>
                            
                        </div>
                    </div> 
                    
                </div>
                
            </div>
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>

    <!-- <script>
        document.addEventListener('DOMContentLoaded', function(){
            const formsubmit = document.getElementById('coupon-form');
            formsubmit.addEventListener('submit',function(event){
                event.preventDefault();

                
            })
        })
    </script> -->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('coupon-form');
            form.addEventListener('submit', async function (event) {
                event.preventDefault();
                console.log("hereee");

                const couponCode = document.getElementById('couponCode');
                const description = document.getElementById('description');
                const discountAmount = document.getElementById('discountAmount');
                const minimumPurchase = document.getElementById('minimumPurchase');
                const status = document.getElementById('status');
                const expiryDate = document.getElementById('expiryDate');

                // Reset previous error messages
                resetErrorMessages();

                // Validate required fields
                const errors = validateRequiredFields([
                    { field: couponCode, fieldName: 'Coupon Code' },
                    { field: description, fieldName: 'Coupon Description' },
                    { field: discountAmount, fieldName: 'Discount Amount' },
                    { field: minimumPurchase, fieldName: 'Minimum Purchase' },
                    { field: status, fieldName: 'Status' },
                    { field: expiryDate, fieldName: 'Expiry Date' },
                ]);

                // Check whitespace for non-number fields
                validateWhitespace(couponCode);
                validateWhitespace(description);
                validateWhitespace(status);

                // Check if expiry date is in the future
                validateFutureDate(expiryDate);

                // Check if discount amount is less than minimum purchase
                validateDiscountAmount(discountAmount, minimumPurchase);

                if (errors.length > 0) {
                    // Display errors and prevent form submission
                    displayErrors(errors);
                } else {
                    // Proceed with form submission
                    const jsonData = {
                        couponCode: couponCode.value,
                        description: description.value,
                        discountAmount: discountAmount.value,
                        minimumPurchase: minimumPurchase.value,
                        status: status.value,
                        expiryDate: expiryDate.value,
                    };

                    try {
                        const response = await fetch("/admin/post-coupon", {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify(jsonData),
                        });

                        const data = await response.json();

                        if (data.error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.error,
                                showConfirmButton: false,
                                timer: 1500,
                            });
                        } else {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: data.message,
                                showConfirmButton: false,
                                timer: 1500,
                            });
                            window.location.href = '/admin/coupon-list';
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to communicate with the server. Please try again.',
                            showConfirmButton: false,
                            timer: 1500,
                        });
                        console.error("Error:", error);
                    }
                }
            });

            // Function to reset error messages
            function resetErrorMessages() {
                const errorMessages = document.querySelectorAll('.text-danger');
                errorMessages.forEach(message => message.innerHTML = '');
            }

            // Function to validate required fields
            function validateRequiredFields(fields) {
                const errors = [];
                fields.forEach(({ field, fieldName }) => {
                    if (!field.value.trim()) {
                        errors.push({ field, message: `${fieldName} is required` });
                    }
                });
                return errors;
            }

            // Function to validate whitespace
            function validateWhitespace(field) {
                if (field.value.trim().length !== field.value.length) {
                    displayError(field, 'Whitespace is not allowed');
                }
            }

            // Function to validate future date
            function validateFutureDate(field) {
                const currentDate = new Date();
                const selectedDate = new Date(field.value);
                if (isNaN(selectedDate.getTime()) || selectedDate <= currentDate) {
                    displayError(field, 'Expiry Date must be in the future');
                }
            }

            // Function to validate discount amount less than minimum purchase
            function validateDiscountAmount(discountAmountField, minimumPurchaseField) {
                const discountAmount = parseFloat(discountAmountField.value);
                const minimumPurchase = parseFloat(minimumPurchaseField.value);
                if (!isNaN(discountAmount) && !isNaN(minimumPurchase) && discountAmount >= minimumPurchase) {
                    displayError(discountAmountField, 'Discount Amount must be less than Minimum Purchase');
                }
            }

            // Function to display errors under corresponding fields
            function displayErrors(errors) {
                errors.forEach(({ field, message }) => {
                    displayError(field, message);
                });
            }

            function displayError(element, message) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'text-danger';
                errorDiv.innerHTML = message;
                element.parentNode.appendChild(errorDiv);
            }
        });

    </script>

    <!-- <script>
        document.addEventListener('DOMContentLoaded', function () {
    var form = document.getElementById('coupon-form');
    form.addEventListener('submit', function (event) {
        var errors = [];

        errors.push(validateField('couponCode', 'Coupon Code is required'));
        errors.push(validateField('description', 'Coupon Description is required'));
        errors.push(validateNumberField('discountAmount', 'Discount Amount must be a non-negative number'));
        errors.push(validateNumberField('minimumPurchase', 'Minimum Purchase must be a non-negative number'));
        errors.push(validateStatusField('status', 'Please select a valid Status'));
        errors.push(validateDateField('expiryDate', 'Expiry Date must be in the future'));
        errors.push(validateDiscountAmount('discountAmount', 'Discount Amount must be less than Minimum Purchase'));

        // Remove empty error messages
        errors = errors.filter(function (error) {
            return error !== null;
        });

        displayErrors(errors);

        if (errors.length > 0) {
            event.preventDefault(); // Prevent form submission if there are errors
        }
    });

    // Function to validate non-empty fields
    function validateField(fieldId, errorMessage) {
        var value = document.getElementById(fieldId).value.trim();
        if (value === '') {
            return fieldId + '|' + errorMessage;
        }
        return null;
    }

    // Function to validate non-negative numbers
    function validateNumberField(fieldId, errorMessage) {
        var value = parseFloat(document.getElementById(fieldId).value);
        if (isNaN(value) || value < 0) {
            return fieldId + '|' + errorMessage;
        }
        return null;
    }

    // Function to validate status field
    function validateStatusField(fieldId, errorMessage) {
        var value = document.getElementById(fieldId).value;
        if (value === 'Select status') {
            return fieldId + '|' + errorMessage;
        }
        return null;
    }

    // Function to validate date field
    function validateDateField(fieldId, errorMessage) {
        var value = new Date(document.getElementById(fieldId).value);
        var currentDate = new Date();
        if (isNaN(value.getTime()) || value <= currentDate) {
            return fieldId + '|' + errorMessage;
        }
        return null;
    }

    // Function to validate that discountAmount is less than minimumPurchase
    function validateDiscountAmount(fieldId, errorMessage) {
        var discountAmount = parseFloat(document.getElementById('discountAmount').value);
        var minimumPurchase = parseFloat(document.getElementById('minimumPurchase').value);
        if (!isNaN(discountAmount) && !isNaN(minimumPurchase) && discountAmount >= minimumPurchase) {
            return fieldId + '|' + errorMessage;
        }
        return null;
    }

    // Function to display errors under corresponding fields
    function displayErrors(errors) {
        errors.forEach(function (error) {
            var errorParts = error.split('|');
            var fieldId = errorParts[0];
            var errorMessage = errorParts[1];

            var errorDiv = document.getElementById(fieldId + '-error');
            if (!errorDiv) {
                errorDiv = document.createElement('div');
                errorDiv.className = 'text-danger';
                errorDiv.id = fieldId + '-error';
                document.getElementById(fieldId).parentNode.appendChild(errorDiv);
            }
            errorDiv.innerHTML = errorMessage;
        });

        // Clear previous errors for fields without errors
        var formElements = ['couponCode', 'description', 'discountAmount', 'minimumPurchase', 'status', 'expiryDate'];
        formElements.forEach(function (fieldId) {
            if (!errors.some(function (error) {
                return error.startsWith(fieldId);
            })) {
                var errorDiv = document.getElementById(fieldId + '-error');
                if (errorDiv) {
                    errorDiv.innerHTML = '';
                }
            }
        });
    }
});
    </script> -->
    
    
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script src="/adminAssets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminAssets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminAssets/js/vendors/select2.min.js"></script>
    <script src="/adminAssets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminAssets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/adminAssets/js/main.js" type="text/javascript"></script>
</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-1.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:32 GMT -->
</html>